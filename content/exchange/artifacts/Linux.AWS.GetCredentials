name: CSIRT.AWS.GetCredentials
author: cornelius.poldrack
description: |
  Artifact to acquire AWS Credentials from AWS Metadaservice/awscli-cli stored credentials


parameters:
  - name: awsclifiles
    default: '.aws/credentials*'
    description: Glob of awscli-file relative to a user's home directory.
  - name: metacredentialsurl
    default: 'http://169.254.169.254/latest/meta-data/iam/security-credentials/'

precondition: SELECT OS FROM info() WHERE OS = 'linux'

type: CLIENT

sources:
   - name: AWSCredentials_Metadaservice
     query: |
            LET token <= SELECT Content FROM http_client(method='PUT',
                url='http://169.254.169.254/latest/api/token',
                headers=dict(`X-aws-ec2-metadata-token-ttl-seconds`='600'))
                WHERE Response = 200
            
            
            LET aws_account = SELECT Content AS accountname FROM http_client(url=metacredentialsurl, headers=dict(`X-aws-ec2-metadata-token`=token.Content[0]))
                     
            LET get_credentials_awsmeta = SELECT * FROM foreach(row=aws_account,query=
                {
                    SELECT if(condition= DataType='array',then=split(string=Content,sep=",\n"),else=Content) as aws_credentials FROM http_client(url=metacredentialsurl+accountname, headers=dict(`X-aws-ec2-metadata-token`=token.Content[0]))
                }) GROUP BY aws_account
            
            LET metadatacredset = SELECT aws_account.accountname as aws_account,get_credentials_awsmeta.aws_credentials as credentials FROM get_credentials_awsmeta
            
            SELECT * FROM metadatacredset GROUP BY aws_account
  
   - name: AWSCredentials_AWSCli
     query: |
      LET awscli = SELECT * from foreach(
          row={
             SELECT Uid, User, Homedir from Artifact.Linux.Sys.Users()
          },
          query={
             SELECT FullPath, User
             FROM glob(root=Homedir, globs=awsclifiles)
          })

      SELECT * from foreach(
          row=awscli,
          query={
            SELECT User, FullPath as credential_file, Key as credential_details
            FROM split_records(
               filenames=FullPath, regex="=", columns=["Type", "Key"])
          }) WHERE credential_details GROUP BY User
